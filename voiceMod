#meta developer: @modules_hikkaa
from .. import loader, utils
import logging

logger = logging.getLogger(__name__)

@loader.tds
class VoiceMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""

    strings = {"name": "Voice"}

    async def client_ready(self, client, db):
        self.db = db
        self.client = client
        if not self.db.get(self.strings["name"], "voices"):
            self.db.set(self.strings["name"], "voices", {})
        if not self.db.get(self.strings["name"], "prefix"):
            self.db.set(self.strings["name"], "prefix", ".")

    def _get_voices(self):
        return self.db.get(self.strings["name"], "voices", {})

    def _save_voices(self, voices):
        self.db.set(self.strings["name"], "voices", voices)

    def _get_prefix(self):
        return self.db.get(self.strings["name"], "prefix", ".")

    def _save_prefix(self, prefix):
        self.db.set(self.strings["name"], "prefix", prefix)

    async def addvoicecmd(self, message):
        """|–î–æ–±–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ.  .addvoice <—Å—Å—ã–ª–∫–∞ –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ> <–∫–æ–º–∞–Ω–¥–∞>. –ü—Ä–∏–º–µ—Ä: .addvoice https://t.me/sjsjsjejidjei2owk/123 –∫–æ–º–∞–Ω–¥–∞ –∏–ª–∏ .addvoice <–æ—Ç–≤–µ—Ç –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ> –∫–æ–º–∞–Ω–¥–∞."""
        args = utils.get_args_raw(message)  
        reply = await message.get_reply_message()  
        voices = self._get_voices()

        if not args and not reply:
            await message.edit("<b>–°—Å—ã–ª–∫–∞ –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ –Ω–µ —É–∫–∞–∑–∞–Ω–∞ –∏–ª–∏ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ</b>")
            return

        if reply and reply.media and getattr(reply.media, "document", None) and reply.media.document.mime_type == "audio/ogg":
            if not args:
                await message.edit("<b>–ù–µ —É–∫–∞–∑–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞.</b>!")
                return
            command = args.strip()
            file = await reply.download_media()

            if command in voices:
                await message.edit(f"<b>–ö–æ–º–∞–Ω–¥–∞:</b> <code>{command}</code> <b>–∑–∞–Ω—è—Ç–∞.</b>")
                return

            voices[command] = file
        elif args.startswith("http") and "t.me" in args:
            args_split = args.split(" ", 1)
            if len(args_split) < 2:
                await message.edit("<b>–ù–µ —É–∫–∞–∑–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞.</b>")
                return
            link = args_split[0]
            command = args_split[1]

            if command in voices:
                await message.edit(f"<b>–ö–æ–º–∞–Ω–¥–∞ <code>{command}</code> <b>–∑–∞–Ω—è—Ç–∞.</b>")
                return

            voices[command] = link
        else:
            await message.edit("<b>–£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É –∏–ª–∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.</b>")
            return

        self._save_voices(voices)
        await message.edit(f"<b>–ì–æ–ª–æ—Å–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –µ–≥–æ –∫–æ–º–∞–Ω–¥–∞</b>: <code>{command}</code>.")

    async def delvoicecmd(self, message):
        """|–£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É .delvoice <–∫–æ–º–∞–Ω–¥–∞>."""
        args = utils.get_args_raw(message)
        voices = self._get_voices()

        if not args or args not in voices:
            await message.edit("<b>–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç—É.</b>")
            return

        del voices[args]
        self._save_voices(voices)
        await message.edit(f"<b>–ì–æ–ª–æ—Å–æ–≤–æ–µ</b> <code>{args}</code> <b>—É–¥–∞–ª–µ–Ω–æ.</b>")

    async def voicelistcmd(self, message):
        """|–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥."""
        voices = self._get_voices()
        if not voices:
            await message.edit("<b>–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç.</b>")
            return

        voice_list = "\n".join([f"{i + 1}. {cmd}" for i, cmd in enumerate(voices)])
        await message.edit(f"üîà <b>–°–ø–∏—Å–æ–∫:</b>\n<code>{voice_list}</code>")

    async def watcher(self, message):
        prefix = self._get_prefix()
        if not message.text or not message.text.startswith(prefix):
            return

        command = message.text[len(prefix):].strip()
        voices = self._get_voices()

        if command not in voices:
            return

        voice = voices[command]
        reply_to_msg = message.reply_to_msg_id or message.id

        if voice.startswith("http"):
            await self.client.send_file(
                message.chat_id, voice, voice_note=True, reply_to=reply_to_msg
            )
        else:
            await self.client.send_file(
                message.chat_id, voice, voice_note=True, reply_to=reply_to_msg
            )

        await message.delete()  

    async def setccmd(self, message):
        """|–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏–º–µ—Ä: .setc @"""
        args = utils.get_args_raw(message)
        if not args or len(args) != 1:
            await message.edit("<b>–£–∫–∞–∂–∏—Ç–µ –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞.</b>")
            return

        new_prefix = args.strip()
        self._save_prefix(new_prefix)
        await message.edit(f"<b>–ü—Ä–µ—Ñ–∏–∫—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞:</b> <code>{new_prefix}</code>.")